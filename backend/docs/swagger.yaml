basePath: /api
definitions:
  dtos.DeviceDTO:
    properties:
      description:
        type: string
      home:
        type: string
      name:
        type: string
    required:
    - home
    - name
    type: object
  dtos.EventDTO:
    properties:
      booleanValue:
        type: boolean
      details:
        type: string
      device:
        type: string
      home:
        type: string
      name:
        type: string
      numericValue:
        type: number
      textValue:
        type: string
      type:
        type: string
    required:
    - device
    - home
    - name
    - type
    type: object
  dtos.HomeDTO:
    properties:
      name:
        type: string
      users:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  dtos.ResponseDTO:
    properties:
      details:
        type: string
      message:
        type: string
    type: object
  dtos.UserDTO:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  models.Device:
    properties:
      createdAt:
        type: string
      description:
        type: string
      home:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Event:
    properties:
      booleanValue:
        type: boolean
      createdAt:
        type: string
      details:
        type: string
      device:
        type: string
      home:
        type: string
      id:
        type: string
      name:
        type: string
      numericValue:
        type: number
      textValue:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  models.Home:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /v1/devices:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Device'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find device
      tags:
      - devices
    options:
      responses: {}
      summary: Options
      tags:
      - devices
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.DeviceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Create device
      tags:
      - devices
  /v1/devices/{id}:
    delete:
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Delete device
      tags:
      - devices
    get:
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find device
      tags:
      - devices
    head:
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Check if device exists
      tags:
      - devices
    patch:
      consumes:
      - application/json
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.DeviceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Partial update device
      tags:
      - devices
    put:
      consumes:
      - application/json
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.DeviceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Update device
      tags:
      - devices
  /v1/events:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find event
      tags:
      - events
    options:
      responses: {}
      summary: Options
      tags:
      - events
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EventDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Create event
      tags:
      - events
  /v1/events/{id}:
    delete:
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Delete event
      tags:
      - events
    get:
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find event
      tags:
      - events
    head:
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Check if event exists
      tags:
      - events
    patch:
      consumes:
      - application/json
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EventDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Partial update event
      tags:
      - events
    put:
      consumes:
      - application/json
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EventDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Update event
      tags:
      - events
  /v1/homes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Home'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find home
      tags:
      - homes
    options:
      responses: {}
      summary: Options
      tags:
      - homes
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.HomeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Home'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Create home
      tags:
      - homes
  /v1/homes/{id}:
    delete:
      parameters:
      - description: Home ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Delete home
      tags:
      - homes
    get:
      parameters:
      - description: Home ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Home'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find home
      tags:
      - homes
    head:
      parameters:
      - description: Home ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Check if home exists
      tags:
      - homes
    patch:
      consumes:
      - application/json
      parameters:
      - description: Home ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.HomeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Home'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Partial update home
      tags:
      - homes
    put:
      consumes:
      - application/json
      parameters:
      - description: Home ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.HomeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Home'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Update home
      tags:
      - homes
  /v1/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find user
      tags:
      - users
    options:
      responses: {}
      summary: Options
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Create user
      tags:
      - users
  /v1/users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Delete user
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Find user
      tags:
      - users
    head:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Check if user exists
      tags:
      - users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Partial update user
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ResponseDTO'
      summary: Update user
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
